/*
 * This file is generated by jOOQ.
 */
package dbconn;


import dbconn.tables.Carstatusdata;
import dbconn.tables.Cartelemetry;
import dbconn.tables.Drivers;
import dbconn.tables.Extractedlapdata;
import dbconn.tables.Heatmapdata;
import dbconn.tables.Instantlapdata;
import dbconn.tables.Motiondata;
import dbconn.tables.Nationalities;
import dbconn.tables.Players;
import dbconn.tables.Sessioninfos;
import dbconn.tables.Teams;
import dbconn.tables.Tracks;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class F1gamedb extends SchemaImpl {

    private static final long serialVersionUID = -866693587;

    /**
     * The reference instance of <code>F1GameDB</code>
     */
    public static final F1gamedb F1GAMEDB = new F1gamedb();

    /**
     * Necessary informaiton from CarStatus packet. Not needed to update quickly, 1Hz should be good enough. 
     */
    public final Carstatusdata CARSTATUSDATA = Carstatusdata.CARSTATUSDATA;

    /**
     * From packet telmetry, should be updated as fast as possible
     */
    public final Cartelemetry CARTELEMETRY = Cartelemetry.CARTELEMETRY;

    /**
     * Store names of all drivers specified by F1 2018.
     */
    public final Drivers DRIVERS = Drivers.DRIVERS;

    /**
     * Lap data not updated frequently, i.e. extracted from several packets. 
     */
    public final Extractedlapdata EXTRACTEDLAPDATA = Extractedlapdata.EXTRACTEDLAPDATA;

    /**
     * Data needed to generate a heat map of the car. Update ratio 1Hz is good enough. 
     */
    public final Heatmapdata HEATMAPDATA = Heatmapdata.HEATMAPDATA;

    /**
     *  Lap Data that should be saved instantaneously. 
     */
    public final Instantlapdata INSTANTLAPDATA = Instantlapdata.INSTANTLAPDATA;

    /**
     * This table includes necessary entries in Motion packet and some entries from other packet that requires instataneous update. The frequency should be as fast as possible. 
     */
    public final Motiondata MOTIONDATA = Motiondata.MOTIONDATA;

    /**
     * Information of natinalities specified by F1 2018.
     */
    public final Nationalities NATIONALITIES = Nationalities.NATIONALITIES;

    /**
     * Store information of players, specified by user. 
     */
    public final Players PLAYERS = Players.PLAYERS;

    /**
     * General information for this session
     */
    public final Sessioninfos SESSIONINFOS = Sessioninfos.SESSIONINFOS;

    /**
     * Store information of all teams specified by F1 2018.
     */
    public final Teams TEAMS = Teams.TEAMS;

    /**
     * Tracks information specified by F1 2018.
     */
    public final Tracks TRACKS = Tracks.TRACKS;

    /**
     * No further instances allowed
     */
    private F1gamedb() {
        super("F1GameDB", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.<Table<?>>asList(
            Carstatusdata.CARSTATUSDATA,
            Cartelemetry.CARTELEMETRY,
            Drivers.DRIVERS,
            Extractedlapdata.EXTRACTEDLAPDATA,
            Heatmapdata.HEATMAPDATA,
            Instantlapdata.INSTANTLAPDATA,
            Motiondata.MOTIONDATA,
            Nationalities.NATIONALITIES,
            Players.PLAYERS,
            Sessioninfos.SESSIONINFOS,
            Teams.TEAMS,
            Tracks.TRACKS);
    }
}
