/*
 * This file is generated by jOOQ.
 */
package dbconn;


import dbconn.tables.Drivers;
import dbconn.tables.Employees;
import dbconn.tables.Nationalities;
import dbconn.tables.Players;
import dbconn.tables.Sessionbasics;
import dbconn.tables.Sessiondetails;
import dbconn.tables.Sessionendstatus;
import dbconn.tables.Sessionperformance;
import dbconn.tables.Sessionstatistics;
import dbconn.tables.Teams;
import dbconn.tables.Tracks;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class F1gamedb extends SchemaImpl {

    private static final long serialVersionUID = 923692680;

    /**
     * The reference instance of <code>F1GameDB</code>
     */
    public static final F1gamedb F1GAMEDB = new F1gamedb();

    /**
     * Store names of all drivers specified by F1 2018.
     */
    public final Drivers DRIVERS = Drivers.DRIVERS;

    /**
     * The table <code>F1GameDB.employees</code>.
     */
    public final Employees EMPLOYEES = Employees.EMPLOYEES;

    /**
     * Information of natinalities specified by F1 2018.
     */
    public final Nationalities NATIONALITIES = Nationalities.NATIONALITIES;

    /**
     * Store information of players, specified by user. 
     */
    public final Players PLAYERS = Players.PLAYERS;

    /**
     * Basic information of the game session: link player to driver, team, car used in this session. 
     */
    public final Sessionbasics SESSIONBASICS = Sessionbasics.SESSIONBASICS;

    /**
     * Detailed informations about the track settings. 
     */
    public final Sessiondetails SESSIONDETAILS = Sessiondetails.SESSIONDETAILS;

    /**
     * Car status at the end of the session: damages fuel remainings etc. 
     */
    public final Sessionendstatus SESSIONENDSTATUS = Sessionendstatus.SESSIONENDSTATUS;

    /**
     * Information related to the performance during a session: max speed, lap time, etc. 
     */
    public final Sessionperformance SESSIONPERFORMANCE = Sessionperformance.SESSIONPERFORMANCE;

    /**
     * Statistic information about how the player controllers the game, such as what buttons are pressed, temperature, etc. 
     */
    public final Sessionstatistics SESSIONSTATISTICS = Sessionstatistics.SESSIONSTATISTICS;

    /**
     * Store information of all teams specified by F1 2018.
     */
    public final Teams TEAMS = Teams.TEAMS;

    /**
     * Tracks information specified by F1 2018.
     */
    public final Tracks TRACKS = Tracks.TRACKS;

    /**
     * No further instances allowed
     */
    private F1gamedb() {
        super("F1GameDB", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.<Table<?>>asList(
            Drivers.DRIVERS,
            Employees.EMPLOYEES,
            Nationalities.NATIONALITIES,
            Players.PLAYERS,
            Sessionbasics.SESSIONBASICS,
            Sessiondetails.SESSIONDETAILS,
            Sessionendstatus.SESSIONENDSTATUS,
            Sessionperformance.SESSIONPERFORMANCE,
            Sessionstatistics.SESSIONSTATISTICS,
            Teams.TEAMS,
            Tracks.TRACKS);
    }
}
