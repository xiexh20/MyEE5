/*
 * This file is generated by jOOQ.
 */
package dbconn.tables;


import dbconn.F1gamedb;
import dbconn.Keys;
import dbconn.tables.records.CarstatusdataRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row14;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Necessary informaiton from CarStatus packet. Not needed to update quickly, 
 * 1Hz should be good enough. 
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Carstatusdata extends TableImpl<CarstatusdataRecord> {

    private static final long serialVersionUID = -799754349;

    /**
     * The reference instance of <code>F1GameDB.CarStatusData</code>
     */
    public static final Carstatusdata CARSTATUSDATA = new Carstatusdata();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CarstatusdataRecord> getRecordType() {
        return CarstatusdataRecord.class;
    }

    /**
     * The column <code>F1GameDB.CarStatusData.idCarStatusData</code>.
     */
    public final TableField<CarstatusdataRecord, Integer> IDCARSTATUSDATA = createField(DSL.name("idCarStatusData"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>F1GameDB.CarStatusData.sessionId</code>.
     */
    public final TableField<CarstatusdataRecord, Long> SESSIONID = createField(DSL.name("sessionId"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>F1GameDB.CarStatusData.sessionTime</code>.
     */
    public final TableField<CarstatusdataRecord, Double> SESSIONTIME = createField(DSL.name("sessionTime"), org.jooq.impl.SQLDataType.FLOAT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.FLOAT)), this, "");

    /**
     * The column <code>F1GameDB.CarStatusData.fuelInTank</code>.
     */
    public final TableField<CarstatusdataRecord, Double> FUELINTANK = createField(DSL.name("fuelInTank"), org.jooq.impl.SQLDataType.FLOAT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.FLOAT)), this, "");

    /**
     * The column <code>F1GameDB.CarStatusData.frontLeftWingDamage</code>.
     */
    public final TableField<CarstatusdataRecord, Short> FRONTLEFTWINGDAMAGE = createField(DSL.name("frontLeftWingDamage"), org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>F1GameDB.CarStatusData.frontRightWingDamage</code>.
     */
    public final TableField<CarstatusdataRecord, Short> FRONTRIGHTWINGDAMAGE = createField(DSL.name("frontRightWingDamage"), org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>F1GameDB.CarStatusData.rearWingDamage</code>.
     */
    public final TableField<CarstatusdataRecord, Short> REARWINGDAMAGE = createField(DSL.name("rearWingDamage"), org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>F1GameDB.CarStatusData.engineDamage</code>.
     */
    public final TableField<CarstatusdataRecord, Short> ENGINEDAMAGE = createField(DSL.name("engineDamage"), org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>F1GameDB.CarStatusData.gearBoxDamage</code>.
     */
    public final TableField<CarstatusdataRecord, Short> GEARBOXDAMAGE = createField(DSL.name("gearBoxDamage"), org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>F1GameDB.CarStatusData.exhaustDamage</code>.
     */
    public final TableField<CarstatusdataRecord, Short> EXHAUSTDAMAGE = createField(DSL.name("exhaustDamage"), org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>F1GameDB.CarStatusData.tyreRLDamage</code>.
     */
    public final TableField<CarstatusdataRecord, Short> TYRERLDAMAGE = createField(DSL.name("tyreRLDamage"), org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>F1GameDB.CarStatusData.tyreRRDamage</code>.
     */
    public final TableField<CarstatusdataRecord, Short> TYRERRDAMAGE = createField(DSL.name("tyreRRDamage"), org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>F1GameDB.CarStatusData.tyreFLDamage</code>.
     */
    public final TableField<CarstatusdataRecord, Short> TYREFLDAMAGE = createField(DSL.name("tyreFLDamage"), org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>F1GameDB.CarStatusData.tyreFRDamage</code>.
     */
    public final TableField<CarstatusdataRecord, Short> TYREFRDAMAGE = createField(DSL.name("tyreFRDamage"), org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * Create a <code>F1GameDB.CarStatusData</code> table reference
     */
    public Carstatusdata() {
        this(DSL.name("CarStatusData"), null);
    }

    /**
     * Create an aliased <code>F1GameDB.CarStatusData</code> table reference
     */
    public Carstatusdata(String alias) {
        this(DSL.name(alias), CARSTATUSDATA);
    }

    /**
     * Create an aliased <code>F1GameDB.CarStatusData</code> table reference
     */
    public Carstatusdata(Name alias) {
        this(alias, CARSTATUSDATA);
    }

    private Carstatusdata(Name alias, Table<CarstatusdataRecord> aliased) {
        this(alias, aliased, null);
    }

    private Carstatusdata(Name alias, Table<CarstatusdataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Necessary informaiton from CarStatus packet. Not needed to update quickly, 1Hz should be good enough. "), TableOptions.table());
    }

    public <O extends Record> Carstatusdata(Table<O> child, ForeignKey<O, CarstatusdataRecord> key) {
        super(child, key, CARSTATUSDATA);
    }

    @Override
    public Schema getSchema() {
        return F1gamedb.F1GAMEDB;
    }

    @Override
    public Identity<CarstatusdataRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CARSTATUSDATA;
    }

    @Override
    public UniqueKey<CarstatusdataRecord> getPrimaryKey() {
        return Keys.KEY_CARSTATUSDATA_PRIMARY;
    }

    @Override
    public List<UniqueKey<CarstatusdataRecord>> getKeys() {
        return Arrays.<UniqueKey<CarstatusdataRecord>>asList(Keys.KEY_CARSTATUSDATA_PRIMARY);
    }

    @Override
    public Carstatusdata as(String alias) {
        return new Carstatusdata(DSL.name(alias), this);
    }

    @Override
    public Carstatusdata as(Name alias) {
        return new Carstatusdata(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Carstatusdata rename(String name) {
        return new Carstatusdata(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Carstatusdata rename(Name name) {
        return new Carstatusdata(name, null);
    }

    // -------------------------------------------------------------------------
    // Row14 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row14<Integer, Long, Double, Double, Short, Short, Short, Short, Short, Short, Short, Short, Short, Short> fieldsRow() {
        return (Row14) super.fieldsRow();
    }
}
