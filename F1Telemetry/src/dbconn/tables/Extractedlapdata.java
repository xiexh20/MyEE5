/*
 * This file is generated by jOOQ.
 */
package dbconn.tables;


import dbconn.F1gamedb;
import dbconn.Keys;
import dbconn.tables.records.ExtractedlapdataRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Lap data not updated frequently, i.e. extracted from several packets. 
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Extractedlapdata extends TableImpl<ExtractedlapdataRecord> {

    private static final long serialVersionUID = 452103398;

    /**
     * The reference instance of <code>F1GameDB.ExtractedLapData</code>
     */
    public static final Extractedlapdata EXTRACTEDLAPDATA = new Extractedlapdata();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ExtractedlapdataRecord> getRecordType() {
        return ExtractedlapdataRecord.class;
    }

    /**
     * The column <code>F1GameDB.ExtractedLapData.idLapData</code>.
     */
    public final TableField<ExtractedlapdataRecord, Integer> IDLAPDATA = createField(DSL.name("idLapData"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>F1GameDB.ExtractedLapData.sessionId</code>.
     */
    public final TableField<ExtractedlapdataRecord, Long> SESSIONID = createField(DSL.name("sessionId"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>F1GameDB.ExtractedLapData.sessionTime</code>.
     */
    public final TableField<ExtractedlapdataRecord, Double> SESSIONTIME = createField(DSL.name("sessionTime"), org.jooq.impl.SQLDataType.FLOAT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.FLOAT)), this, "");

    /**
     * The column <code>F1GameDB.ExtractedLapData.lastLapTime</code>.
     */
    public final TableField<ExtractedlapdataRecord, Double> LASTLAPTIME = createField(DSL.name("lastLapTime"), org.jooq.impl.SQLDataType.FLOAT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.FLOAT)), this, "");

    /**
     * The column <code>F1GameDB.ExtractedLapData.bestLapTime</code>.
     */
    public final TableField<ExtractedlapdataRecord, Double> BESTLAPTIME = createField(DSL.name("bestLapTime"), org.jooq.impl.SQLDataType.FLOAT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.FLOAT)), this, "");

    /**
     * The column <code>F1GameDB.ExtractedLapData.penalties</code>.
     */
    public final TableField<ExtractedlapdataRecord, Short> PENALTIES = createField(DSL.name("penalties"), org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>F1GameDB.ExtractedLapData.safetyCarDelta</code>.
     */
    public final TableField<ExtractedlapdataRecord, Short> SAFETYCARDELTA = createField(DSL.name("safetyCarDelta"), org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>F1GameDB.ExtractedLapData.currentLapNum</code>.
     */
    public final TableField<ExtractedlapdataRecord, Byte> CURRENTLAPNUM = createField(DSL.name("currentLapNum"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>F1GameDB.ExtractedLapData.carPosition</code>.
     */
    public final TableField<ExtractedlapdataRecord, Byte> CARPOSITION = createField(DSL.name("carPosition"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * Create a <code>F1GameDB.ExtractedLapData</code> table reference
     */
    public Extractedlapdata() {
        this(DSL.name("ExtractedLapData"), null);
    }

    /**
     * Create an aliased <code>F1GameDB.ExtractedLapData</code> table reference
     */
    public Extractedlapdata(String alias) {
        this(DSL.name(alias), EXTRACTEDLAPDATA);
    }

    /**
     * Create an aliased <code>F1GameDB.ExtractedLapData</code> table reference
     */
    public Extractedlapdata(Name alias) {
        this(alias, EXTRACTEDLAPDATA);
    }

    private Extractedlapdata(Name alias, Table<ExtractedlapdataRecord> aliased) {
        this(alias, aliased, null);
    }

    private Extractedlapdata(Name alias, Table<ExtractedlapdataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Lap data not updated frequently, i.e. extracted from several packets. "), TableOptions.table());
    }

    public <O extends Record> Extractedlapdata(Table<O> child, ForeignKey<O, ExtractedlapdataRecord> key) {
        super(child, key, EXTRACTEDLAPDATA);
    }

    @Override
    public Schema getSchema() {
        return F1gamedb.F1GAMEDB;
    }

    @Override
    public Identity<ExtractedlapdataRecord, Integer> getIdentity() {
        return Keys.IDENTITY_EXTRACTEDLAPDATA;
    }

    @Override
    public UniqueKey<ExtractedlapdataRecord> getPrimaryKey() {
        return Keys.KEY_EXTRACTEDLAPDATA_PRIMARY;
    }

    @Override
    public List<UniqueKey<ExtractedlapdataRecord>> getKeys() {
        return Arrays.<UniqueKey<ExtractedlapdataRecord>>asList(Keys.KEY_EXTRACTEDLAPDATA_PRIMARY);
    }

    @Override
    public Extractedlapdata as(String alias) {
        return new Extractedlapdata(DSL.name(alias), this);
    }

    @Override
    public Extractedlapdata as(Name alias) {
        return new Extractedlapdata(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Extractedlapdata rename(String name) {
        return new Extractedlapdata(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Extractedlapdata rename(Name name) {
        return new Extractedlapdata(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, Long, Double, Double, Double, Short, Short, Byte, Byte> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
