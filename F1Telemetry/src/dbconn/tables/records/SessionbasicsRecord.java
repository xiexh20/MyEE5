/*
 * This file is generated by jOOQ.
 */
package dbconn.tables.records;


import dbconn.tables.Sessionbasics;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Basic information of the game session: link player to driver, team, car 
 * used in this session. 
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SessionbasicsRecord extends UpdatableRecordImpl<SessionbasicsRecord> implements Record7<Integer, Integer, Short, Short, Short, Short, LocalDateTime> {

    private static final long serialVersionUID = 1932722469;

    /**
     * Setter for <code>F1GameDB.SessionBasics.idSession</code>.
     */
    public void setIdsession(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>F1GameDB.SessionBasics.idSession</code>.
     */
    public Integer getIdsession() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>F1GameDB.SessionBasics.player</code>.
     */
    public void setPlayer(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>F1GameDB.SessionBasics.player</code>.
     */
    public Integer getPlayer() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>F1GameDB.SessionBasics.driver</code>.
     */
    public void setDriver(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>F1GameDB.SessionBasics.driver</code>.
     */
    public Short getDriver() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>F1GameDB.SessionBasics.team</code>.
     */
    public void setTeam(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>F1GameDB.SessionBasics.team</code>.
     */
    public Short getTeam() {
        return (Short) get(3);
    }

    /**
     * Setter for <code>F1GameDB.SessionBasics.nationality</code>.
     */
    public void setNationality(Short value) {
        set(4, value);
    }

    /**
     * Getter for <code>F1GameDB.SessionBasics.nationality</code>.
     */
    public Short getNationality() {
        return (Short) get(4);
    }

    /**
     * Setter for <code>F1GameDB.SessionBasics.carRaceNr</code>.
     */
    public void setCarracenr(Short value) {
        set(5, value);
    }

    /**
     * Getter for <code>F1GameDB.SessionBasics.carRaceNr</code>.
     */
    public Short getCarracenr() {
        return (Short) get(5);
    }

    /**
     * Setter for <code>F1GameDB.SessionBasics.time</code>.
     */
    public void setTime(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>F1GameDB.SessionBasics.time</code>.
     */
    public LocalDateTime getTime() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Integer, Short, Short, Short, Short, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, Integer, Short, Short, Short, Short, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Sessionbasics.SESSIONBASICS.IDSESSION;
    }

    @Override
    public Field<Integer> field2() {
        return Sessionbasics.SESSIONBASICS.PLAYER;
    }

    @Override
    public Field<Short> field3() {
        return Sessionbasics.SESSIONBASICS.DRIVER;
    }

    @Override
    public Field<Short> field4() {
        return Sessionbasics.SESSIONBASICS.TEAM;
    }

    @Override
    public Field<Short> field5() {
        return Sessionbasics.SESSIONBASICS.NATIONALITY;
    }

    @Override
    public Field<Short> field6() {
        return Sessionbasics.SESSIONBASICS.CARRACENR;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Sessionbasics.SESSIONBASICS.TIME;
    }

    @Override
    public Integer component1() {
        return getIdsession();
    }

    @Override
    public Integer component2() {
        return getPlayer();
    }

    @Override
    public Short component3() {
        return getDriver();
    }

    @Override
    public Short component4() {
        return getTeam();
    }

    @Override
    public Short component5() {
        return getNationality();
    }

    @Override
    public Short component6() {
        return getCarracenr();
    }

    @Override
    public LocalDateTime component7() {
        return getTime();
    }

    @Override
    public Integer value1() {
        return getIdsession();
    }

    @Override
    public Integer value2() {
        return getPlayer();
    }

    @Override
    public Short value3() {
        return getDriver();
    }

    @Override
    public Short value4() {
        return getTeam();
    }

    @Override
    public Short value5() {
        return getNationality();
    }

    @Override
    public Short value6() {
        return getCarracenr();
    }

    @Override
    public LocalDateTime value7() {
        return getTime();
    }

    @Override
    public SessionbasicsRecord value1(Integer value) {
        setIdsession(value);
        return this;
    }

    @Override
    public SessionbasicsRecord value2(Integer value) {
        setPlayer(value);
        return this;
    }

    @Override
    public SessionbasicsRecord value3(Short value) {
        setDriver(value);
        return this;
    }

    @Override
    public SessionbasicsRecord value4(Short value) {
        setTeam(value);
        return this;
    }

    @Override
    public SessionbasicsRecord value5(Short value) {
        setNationality(value);
        return this;
    }

    @Override
    public SessionbasicsRecord value6(Short value) {
        setCarracenr(value);
        return this;
    }

    @Override
    public SessionbasicsRecord value7(LocalDateTime value) {
        setTime(value);
        return this;
    }

    @Override
    public SessionbasicsRecord values(Integer value1, Integer value2, Short value3, Short value4, Short value5, Short value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SessionbasicsRecord
     */
    public SessionbasicsRecord() {
        super(Sessionbasics.SESSIONBASICS);
    }

    /**
     * Create a detached, initialised SessionbasicsRecord
     */
    public SessionbasicsRecord(Integer idsession, Integer player, Short driver, Short team, Short nationality, Short carracenr, LocalDateTime time) {
        super(Sessionbasics.SESSIONBASICS);

        set(0, idsession);
        set(1, player);
        set(2, driver);
        set(3, team);
        set(4, nationality);
        set(5, carracenr);
        set(6, time);
    }
}
