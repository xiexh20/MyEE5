/*
 * This file is generated by jOOQ.
 */
package dbconn.tables.records;


import dbconn.tables.Extractedlapdata;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Lap data not updated frequently, i.e. extracted from several packets. 
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExtractedlapdataRecord extends UpdatableRecordImpl<ExtractedlapdataRecord> implements Record9<Integer, Long, Double, Double, Double, Short, Short, Byte, Byte> {

    private static final long serialVersionUID = 702263562;

    /**
     * Setter for <code>F1GameDB.ExtractedLapData.idLapData</code>.
     */
    public void setIdlapdata(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>F1GameDB.ExtractedLapData.idLapData</code>.
     */
    public Integer getIdlapdata() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>F1GameDB.ExtractedLapData.sessionId</code>.
     */
    public void setSessionid(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>F1GameDB.ExtractedLapData.sessionId</code>.
     */
    public Long getSessionid() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>F1GameDB.ExtractedLapData.sessionTime</code>.
     */
    public void setSessiontime(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>F1GameDB.ExtractedLapData.sessionTime</code>.
     */
    public Double getSessiontime() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>F1GameDB.ExtractedLapData.lastLapTime</code>.
     */
    public void setLastlaptime(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>F1GameDB.ExtractedLapData.lastLapTime</code>.
     */
    public Double getLastlaptime() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>F1GameDB.ExtractedLapData.bestLapTime</code>.
     */
    public void setBestlaptime(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>F1GameDB.ExtractedLapData.bestLapTime</code>.
     */
    public Double getBestlaptime() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>F1GameDB.ExtractedLapData.penalties</code>.
     */
    public void setPenalties(Short value) {
        set(5, value);
    }

    /**
     * Getter for <code>F1GameDB.ExtractedLapData.penalties</code>.
     */
    public Short getPenalties() {
        return (Short) get(5);
    }

    /**
     * Setter for <code>F1GameDB.ExtractedLapData.safetyCarDelta</code>.
     */
    public void setSafetycardelta(Short value) {
        set(6, value);
    }

    /**
     * Getter for <code>F1GameDB.ExtractedLapData.safetyCarDelta</code>.
     */
    public Short getSafetycardelta() {
        return (Short) get(6);
    }

    /**
     * Setter for <code>F1GameDB.ExtractedLapData.currentLapNum</code>.
     */
    public void setCurrentlapnum(Byte value) {
        set(7, value);
    }

    /**
     * Getter for <code>F1GameDB.ExtractedLapData.currentLapNum</code>.
     */
    public Byte getCurrentlapnum() {
        return (Byte) get(7);
    }

    /**
     * Setter for <code>F1GameDB.ExtractedLapData.carPosition</code>.
     */
    public void setCarposition(Byte value) {
        set(8, value);
    }

    /**
     * Getter for <code>F1GameDB.ExtractedLapData.carPosition</code>.
     */
    public Byte getCarposition() {
        return (Byte) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, Long, Double, Double, Double, Short, Short, Byte, Byte> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Integer, Long, Double, Double, Double, Short, Short, Byte, Byte> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Extractedlapdata.EXTRACTEDLAPDATA.IDLAPDATA;
    }

    @Override
    public Field<Long> field2() {
        return Extractedlapdata.EXTRACTEDLAPDATA.SESSIONID;
    }

    @Override
    public Field<Double> field3() {
        return Extractedlapdata.EXTRACTEDLAPDATA.SESSIONTIME;
    }

    @Override
    public Field<Double> field4() {
        return Extractedlapdata.EXTRACTEDLAPDATA.LASTLAPTIME;
    }

    @Override
    public Field<Double> field5() {
        return Extractedlapdata.EXTRACTEDLAPDATA.BESTLAPTIME;
    }

    @Override
    public Field<Short> field6() {
        return Extractedlapdata.EXTRACTEDLAPDATA.PENALTIES;
    }

    @Override
    public Field<Short> field7() {
        return Extractedlapdata.EXTRACTEDLAPDATA.SAFETYCARDELTA;
    }

    @Override
    public Field<Byte> field8() {
        return Extractedlapdata.EXTRACTEDLAPDATA.CURRENTLAPNUM;
    }

    @Override
    public Field<Byte> field9() {
        return Extractedlapdata.EXTRACTEDLAPDATA.CARPOSITION;
    }

    @Override
    public Integer component1() {
        return getIdlapdata();
    }

    @Override
    public Long component2() {
        return getSessionid();
    }

    @Override
    public Double component3() {
        return getSessiontime();
    }

    @Override
    public Double component4() {
        return getLastlaptime();
    }

    @Override
    public Double component5() {
        return getBestlaptime();
    }

    @Override
    public Short component6() {
        return getPenalties();
    }

    @Override
    public Short component7() {
        return getSafetycardelta();
    }

    @Override
    public Byte component8() {
        return getCurrentlapnum();
    }

    @Override
    public Byte component9() {
        return getCarposition();
    }

    @Override
    public Integer value1() {
        return getIdlapdata();
    }

    @Override
    public Long value2() {
        return getSessionid();
    }

    @Override
    public Double value3() {
        return getSessiontime();
    }

    @Override
    public Double value4() {
        return getLastlaptime();
    }

    @Override
    public Double value5() {
        return getBestlaptime();
    }

    @Override
    public Short value6() {
        return getPenalties();
    }

    @Override
    public Short value7() {
        return getSafetycardelta();
    }

    @Override
    public Byte value8() {
        return getCurrentlapnum();
    }

    @Override
    public Byte value9() {
        return getCarposition();
    }

    @Override
    public ExtractedlapdataRecord value1(Integer value) {
        setIdlapdata(value);
        return this;
    }

    @Override
    public ExtractedlapdataRecord value2(Long value) {
        setSessionid(value);
        return this;
    }

    @Override
    public ExtractedlapdataRecord value3(Double value) {
        setSessiontime(value);
        return this;
    }

    @Override
    public ExtractedlapdataRecord value4(Double value) {
        setLastlaptime(value);
        return this;
    }

    @Override
    public ExtractedlapdataRecord value5(Double value) {
        setBestlaptime(value);
        return this;
    }

    @Override
    public ExtractedlapdataRecord value6(Short value) {
        setPenalties(value);
        return this;
    }

    @Override
    public ExtractedlapdataRecord value7(Short value) {
        setSafetycardelta(value);
        return this;
    }

    @Override
    public ExtractedlapdataRecord value8(Byte value) {
        setCurrentlapnum(value);
        return this;
    }

    @Override
    public ExtractedlapdataRecord value9(Byte value) {
        setCarposition(value);
        return this;
    }

    @Override
    public ExtractedlapdataRecord values(Integer value1, Long value2, Double value3, Double value4, Double value5, Short value6, Short value7, Byte value8, Byte value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ExtractedlapdataRecord
     */
    public ExtractedlapdataRecord() {
        super(Extractedlapdata.EXTRACTEDLAPDATA);
    }

    /**
     * Create a detached, initialised ExtractedlapdataRecord
     */
    public ExtractedlapdataRecord(Integer idlapdata, Long sessionid, Double sessiontime, Double lastlaptime, Double bestlaptime, Short penalties, Short safetycardelta, Byte currentlapnum, Byte carposition) {
        super(Extractedlapdata.EXTRACTEDLAPDATA);

        set(0, idlapdata);
        set(1, sessionid);
        set(2, sessiontime);
        set(3, lastlaptime);
        set(4, bestlaptime);
        set(5, penalties);
        set(6, safetycardelta);
        set(7, currentlapnum);
        set(8, carposition);
    }
}
