/*
 * This file is generated by jOOQ.
 */
package dbconn.tables.records;


import dbconn.tables.Heatmapdata;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record16;
import org.jooq.Row16;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Data needed to generate a heat map of the car. Update ratio 1Hz is good 
 * enough. 
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HeatmapdataRecord extends UpdatableRecordImpl<HeatmapdataRecord> implements Record16<Integer, Long, Double, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = 1452658452;

    /**
     * Setter for <code>F1GameDB.HeatMapData.idHeatMapData</code>.
     */
    public void setIdheatmapdata(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>F1GameDB.HeatMapData.idHeatMapData</code>.
     */
    public Integer getIdheatmapdata() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>F1GameDB.HeatMapData.sessionId</code>.
     */
    public void setSessionid(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>F1GameDB.HeatMapData.sessionId</code>.
     */
    public Long getSessionid() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>F1GameDB.HeatMapData.sessionTime</code>.
     */
    public void setSessiontime(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>F1GameDB.HeatMapData.sessionTime</code>.
     */
    public Double getSessiontime() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>F1GameDB.HeatMapData.brakeRL</code>.
     */
    public void setBrakerl(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>F1GameDB.HeatMapData.brakeRL</code>.
     */
    public Integer getBrakerl() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>F1GameDB.HeatMapData.brakeRR</code>.
     */
    public void setBrakerr(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>F1GameDB.HeatMapData.brakeRR</code>.
     */
    public Integer getBrakerr() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>F1GameDB.HeatMapData.brakeFL</code>.
     */
    public void setBrakefl(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>F1GameDB.HeatMapData.brakeFL</code>.
     */
    public Integer getBrakefl() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>F1GameDB.HeatMapData.brakeFR</code>.
     */
    public void setBrakefr(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>F1GameDB.HeatMapData.brakeFR</code>.
     */
    public Integer getBrakefr() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>F1GameDB.HeatMapData.tyreRLSurface</code>.
     */
    public void setTyrerlsurface(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>F1GameDB.HeatMapData.tyreRLSurface</code>.
     */
    public Integer getTyrerlsurface() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>F1GameDB.HeatMapData.tyreRRSurface</code>.
     */
    public void setTyrerrsurface(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>F1GameDB.HeatMapData.tyreRRSurface</code>.
     */
    public Integer getTyrerrsurface() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>F1GameDB.HeatMapData.tyreFLSurface</code>.
     */
    public void setTyreflsurface(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>F1GameDB.HeatMapData.tyreFLSurface</code>.
     */
    public Integer getTyreflsurface() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>F1GameDB.HeatMapData.tyreFRSurface</code>.
     */
    public void setTyrefrsurface(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>F1GameDB.HeatMapData.tyreFRSurface</code>.
     */
    public Integer getTyrefrsurface() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>F1GameDB.HeatMapData.engine</code>.
     */
    public void setEngine(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>F1GameDB.HeatMapData.engine</code>.
     */
    public Integer getEngine() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>F1GameDB.HeatMapData.tyreRLInner</code>.
     */
    public void setTyrerlinner(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>F1GameDB.HeatMapData.tyreRLInner</code>.
     */
    public Integer getTyrerlinner() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>F1GameDB.HeatMapData.tyreRRInner</code>.
     */
    public void setTyrerrinner(Integer value) {
        set(13, value);
    }

    /**
     * Getter for <code>F1GameDB.HeatMapData.tyreRRInner</code>.
     */
    public Integer getTyrerrinner() {
        return (Integer) get(13);
    }

    /**
     * Setter for <code>F1GameDB.HeatMapData.tyreFLInner</code>.
     */
    public void setTyreflinner(Integer value) {
        set(14, value);
    }

    /**
     * Getter for <code>F1GameDB.HeatMapData.tyreFLInner</code>.
     */
    public Integer getTyreflinner() {
        return (Integer) get(14);
    }

    /**
     * Setter for <code>F1GameDB.HeatMapData.tyreFRInner</code>.
     */
    public void setTyrefrinner(Integer value) {
        set(15, value);
    }

    /**
     * Getter for <code>F1GameDB.HeatMapData.tyreFRInner</code>.
     */
    public Integer getTyrefrinner() {
        return (Integer) get(15);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record16 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row16<Integer, Long, Double, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row16) super.fieldsRow();
    }

    @Override
    public Row16<Integer, Long, Double, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> valuesRow() {
        return (Row16) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Heatmapdata.HEATMAPDATA.IDHEATMAPDATA;
    }

    @Override
    public Field<Long> field2() {
        return Heatmapdata.HEATMAPDATA.SESSIONID;
    }

    @Override
    public Field<Double> field3() {
        return Heatmapdata.HEATMAPDATA.SESSIONTIME;
    }

    @Override
    public Field<Integer> field4() {
        return Heatmapdata.HEATMAPDATA.BRAKERL;
    }

    @Override
    public Field<Integer> field5() {
        return Heatmapdata.HEATMAPDATA.BRAKERR;
    }

    @Override
    public Field<Integer> field6() {
        return Heatmapdata.HEATMAPDATA.BRAKEFL;
    }

    @Override
    public Field<Integer> field7() {
        return Heatmapdata.HEATMAPDATA.BRAKEFR;
    }

    @Override
    public Field<Integer> field8() {
        return Heatmapdata.HEATMAPDATA.TYRERLSURFACE;
    }

    @Override
    public Field<Integer> field9() {
        return Heatmapdata.HEATMAPDATA.TYRERRSURFACE;
    }

    @Override
    public Field<Integer> field10() {
        return Heatmapdata.HEATMAPDATA.TYREFLSURFACE;
    }

    @Override
    public Field<Integer> field11() {
        return Heatmapdata.HEATMAPDATA.TYREFRSURFACE;
    }

    @Override
    public Field<Integer> field12() {
        return Heatmapdata.HEATMAPDATA.ENGINE;
    }

    @Override
    public Field<Integer> field13() {
        return Heatmapdata.HEATMAPDATA.TYRERLINNER;
    }

    @Override
    public Field<Integer> field14() {
        return Heatmapdata.HEATMAPDATA.TYRERRINNER;
    }

    @Override
    public Field<Integer> field15() {
        return Heatmapdata.HEATMAPDATA.TYREFLINNER;
    }

    @Override
    public Field<Integer> field16() {
        return Heatmapdata.HEATMAPDATA.TYREFRINNER;
    }

    @Override
    public Integer component1() {
        return getIdheatmapdata();
    }

    @Override
    public Long component2() {
        return getSessionid();
    }

    @Override
    public Double component3() {
        return getSessiontime();
    }

    @Override
    public Integer component4() {
        return getBrakerl();
    }

    @Override
    public Integer component5() {
        return getBrakerr();
    }

    @Override
    public Integer component6() {
        return getBrakefl();
    }

    @Override
    public Integer component7() {
        return getBrakefr();
    }

    @Override
    public Integer component8() {
        return getTyrerlsurface();
    }

    @Override
    public Integer component9() {
        return getTyrerrsurface();
    }

    @Override
    public Integer component10() {
        return getTyreflsurface();
    }

    @Override
    public Integer component11() {
        return getTyrefrsurface();
    }

    @Override
    public Integer component12() {
        return getEngine();
    }

    @Override
    public Integer component13() {
        return getTyrerlinner();
    }

    @Override
    public Integer component14() {
        return getTyrerrinner();
    }

    @Override
    public Integer component15() {
        return getTyreflinner();
    }

    @Override
    public Integer component16() {
        return getTyrefrinner();
    }

    @Override
    public Integer value1() {
        return getIdheatmapdata();
    }

    @Override
    public Long value2() {
        return getSessionid();
    }

    @Override
    public Double value3() {
        return getSessiontime();
    }

    @Override
    public Integer value4() {
        return getBrakerl();
    }

    @Override
    public Integer value5() {
        return getBrakerr();
    }

    @Override
    public Integer value6() {
        return getBrakefl();
    }

    @Override
    public Integer value7() {
        return getBrakefr();
    }

    @Override
    public Integer value8() {
        return getTyrerlsurface();
    }

    @Override
    public Integer value9() {
        return getTyrerrsurface();
    }

    @Override
    public Integer value10() {
        return getTyreflsurface();
    }

    @Override
    public Integer value11() {
        return getTyrefrsurface();
    }

    @Override
    public Integer value12() {
        return getEngine();
    }

    @Override
    public Integer value13() {
        return getTyrerlinner();
    }

    @Override
    public Integer value14() {
        return getTyrerrinner();
    }

    @Override
    public Integer value15() {
        return getTyreflinner();
    }

    @Override
    public Integer value16() {
        return getTyrefrinner();
    }

    @Override
    public HeatmapdataRecord value1(Integer value) {
        setIdheatmapdata(value);
        return this;
    }

    @Override
    public HeatmapdataRecord value2(Long value) {
        setSessionid(value);
        return this;
    }

    @Override
    public HeatmapdataRecord value3(Double value) {
        setSessiontime(value);
        return this;
    }

    @Override
    public HeatmapdataRecord value4(Integer value) {
        setBrakerl(value);
        return this;
    }

    @Override
    public HeatmapdataRecord value5(Integer value) {
        setBrakerr(value);
        return this;
    }

    @Override
    public HeatmapdataRecord value6(Integer value) {
        setBrakefl(value);
        return this;
    }

    @Override
    public HeatmapdataRecord value7(Integer value) {
        setBrakefr(value);
        return this;
    }

    @Override
    public HeatmapdataRecord value8(Integer value) {
        setTyrerlsurface(value);
        return this;
    }

    @Override
    public HeatmapdataRecord value9(Integer value) {
        setTyrerrsurface(value);
        return this;
    }

    @Override
    public HeatmapdataRecord value10(Integer value) {
        setTyreflsurface(value);
        return this;
    }

    @Override
    public HeatmapdataRecord value11(Integer value) {
        setTyrefrsurface(value);
        return this;
    }

    @Override
    public HeatmapdataRecord value12(Integer value) {
        setEngine(value);
        return this;
    }

    @Override
    public HeatmapdataRecord value13(Integer value) {
        setTyrerlinner(value);
        return this;
    }

    @Override
    public HeatmapdataRecord value14(Integer value) {
        setTyrerrinner(value);
        return this;
    }

    @Override
    public HeatmapdataRecord value15(Integer value) {
        setTyreflinner(value);
        return this;
    }

    @Override
    public HeatmapdataRecord value16(Integer value) {
        setTyrefrinner(value);
        return this;
    }

    @Override
    public HeatmapdataRecord values(Integer value1, Long value2, Double value3, Integer value4, Integer value5, Integer value6, Integer value7, Integer value8, Integer value9, Integer value10, Integer value11, Integer value12, Integer value13, Integer value14, Integer value15, Integer value16) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached HeatmapdataRecord
     */
    public HeatmapdataRecord() {
        super(Heatmapdata.HEATMAPDATA);
    }

    /**
     * Create a detached, initialised HeatmapdataRecord
     */
    public HeatmapdataRecord(Integer idheatmapdata, Long sessionid, Double sessiontime, Integer brakerl, Integer brakerr, Integer brakefl, Integer brakefr, Integer tyrerlsurface, Integer tyrerrsurface, Integer tyreflsurface, Integer tyrefrsurface, Integer engine, Integer tyrerlinner, Integer tyrerrinner, Integer tyreflinner, Integer tyrefrinner) {
        super(Heatmapdata.HEATMAPDATA);

        set(0, idheatmapdata);
        set(1, sessionid);
        set(2, sessiontime);
        set(3, brakerl);
        set(4, brakerr);
        set(5, brakefl);
        set(6, brakefr);
        set(7, tyrerlsurface);
        set(8, tyrerrsurface);
        set(9, tyreflsurface);
        set(10, tyrefrsurface);
        set(11, engine);
        set(12, tyrerlinner);
        set(13, tyrerrinner);
        set(14, tyreflinner);
        set(15, tyrefrinner);
    }
}
