/*
 * This file is generated by jOOQ.
 */
package dbconn.tables.records;


import dbconn.tables.Sessionperformance;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Information related to the performance during a session: max speed, lap 
 * time, etc. 
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SessionperformanceRecord extends UpdatableRecordImpl<SessionperformanceRecord> implements Record7<Integer, BigDecimal, Byte, Integer, Byte, Integer, BigDecimal> {

    private static final long serialVersionUID = -540204877;

    /**
     * Setter for <code>F1GameDB.SessionPerformance.senssionId</code>.
     */
    public void setSenssionid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>F1GameDB.SessionPerformance.senssionId</code>.
     */
    public Integer getSenssionid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>F1GameDB.SessionPerformance.maxSpeed</code>.
     */
    public void setMaxspeed(BigDecimal value) {
        set(1, value);
    }

    /**
     * Getter for <code>F1GameDB.SessionPerformance.maxSpeed</code>.
     */
    public BigDecimal getMaxspeed() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>F1GameDB.SessionPerformance.slowestLap</code>.
     */
    public void setSlowestlap(Byte value) {
        set(2, value);
    }

    /**
     * Getter for <code>F1GameDB.SessionPerformance.slowestLap</code>.
     */
    public Byte getSlowestlap() {
        return (Byte) get(2);
    }

    /**
     * Setter for <code>F1GameDB.SessionPerformance.maxLapTime</code>.
     */
    public void setMaxlaptime(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>F1GameDB.SessionPerformance.maxLapTime</code>.
     */
    public Integer getMaxlaptime() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>F1GameDB.SessionPerformance.fastestLap</code>.
     */
    public void setFastestlap(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>F1GameDB.SessionPerformance.fastestLap</code>.
     */
    public Byte getFastestlap() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>F1GameDB.SessionPerformance.minLapTime</code>.
     */
    public void setMinlaptime(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>F1GameDB.SessionPerformance.minLapTime</code>.
     */
    public Integer getMinlaptime() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>F1GameDB.SessionPerformance.avgSpeed</code>.
     */
    public void setAvgspeed(BigDecimal value) {
        set(6, value);
    }

    /**
     * Getter for <code>F1GameDB.SessionPerformance.avgSpeed</code>.
     */
    public BigDecimal getAvgspeed() {
        return (BigDecimal) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, BigDecimal, Byte, Integer, Byte, Integer, BigDecimal> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, BigDecimal, Byte, Integer, Byte, Integer, BigDecimal> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Sessionperformance.SESSIONPERFORMANCE.SENSSIONID;
    }

    @Override
    public Field<BigDecimal> field2() {
        return Sessionperformance.SESSIONPERFORMANCE.MAXSPEED;
    }

    @Override
    public Field<Byte> field3() {
        return Sessionperformance.SESSIONPERFORMANCE.SLOWESTLAP;
    }

    @Override
    public Field<Integer> field4() {
        return Sessionperformance.SESSIONPERFORMANCE.MAXLAPTIME;
    }

    @Override
    public Field<Byte> field5() {
        return Sessionperformance.SESSIONPERFORMANCE.FASTESTLAP;
    }

    @Override
    public Field<Integer> field6() {
        return Sessionperformance.SESSIONPERFORMANCE.MINLAPTIME;
    }

    @Override
    public Field<BigDecimal> field7() {
        return Sessionperformance.SESSIONPERFORMANCE.AVGSPEED;
    }

    @Override
    public Integer component1() {
        return getSenssionid();
    }

    @Override
    public BigDecimal component2() {
        return getMaxspeed();
    }

    @Override
    public Byte component3() {
        return getSlowestlap();
    }

    @Override
    public Integer component4() {
        return getMaxlaptime();
    }

    @Override
    public Byte component5() {
        return getFastestlap();
    }

    @Override
    public Integer component6() {
        return getMinlaptime();
    }

    @Override
    public BigDecimal component7() {
        return getAvgspeed();
    }

    @Override
    public Integer value1() {
        return getSenssionid();
    }

    @Override
    public BigDecimal value2() {
        return getMaxspeed();
    }

    @Override
    public Byte value3() {
        return getSlowestlap();
    }

    @Override
    public Integer value4() {
        return getMaxlaptime();
    }

    @Override
    public Byte value5() {
        return getFastestlap();
    }

    @Override
    public Integer value6() {
        return getMinlaptime();
    }

    @Override
    public BigDecimal value7() {
        return getAvgspeed();
    }

    @Override
    public SessionperformanceRecord value1(Integer value) {
        setSenssionid(value);
        return this;
    }

    @Override
    public SessionperformanceRecord value2(BigDecimal value) {
        setMaxspeed(value);
        return this;
    }

    @Override
    public SessionperformanceRecord value3(Byte value) {
        setSlowestlap(value);
        return this;
    }

    @Override
    public SessionperformanceRecord value4(Integer value) {
        setMaxlaptime(value);
        return this;
    }

    @Override
    public SessionperformanceRecord value5(Byte value) {
        setFastestlap(value);
        return this;
    }

    @Override
    public SessionperformanceRecord value6(Integer value) {
        setMinlaptime(value);
        return this;
    }

    @Override
    public SessionperformanceRecord value7(BigDecimal value) {
        setAvgspeed(value);
        return this;
    }

    @Override
    public SessionperformanceRecord values(Integer value1, BigDecimal value2, Byte value3, Integer value4, Byte value5, Integer value6, BigDecimal value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SessionperformanceRecord
     */
    public SessionperformanceRecord() {
        super(Sessionperformance.SESSIONPERFORMANCE);
    }

    /**
     * Create a detached, initialised SessionperformanceRecord
     */
    public SessionperformanceRecord(Integer senssionid, BigDecimal maxspeed, Byte slowestlap, Integer maxlaptime, Byte fastestlap, Integer minlaptime, BigDecimal avgspeed) {
        super(Sessionperformance.SESSIONPERFORMANCE);

        set(0, senssionid);
        set(1, maxspeed);
        set(2, slowestlap);
        set(3, maxlaptime);
        set(4, fastestlap);
        set(5, minlaptime);
        set(6, avgspeed);
    }
}
