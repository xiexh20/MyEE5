/*
 * This file is generated by jOOQ.
 */
package dbconn.tables;


import dbconn.F1gamedb;
import dbconn.Keys;
import dbconn.tables.records.SessioninfosRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * General information for this session
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Sessioninfos extends TableImpl<SessioninfosRecord> {

    private static final long serialVersionUID = -1314271071;

    /**
     * The reference instance of <code>F1GameDB.SessionInfos</code>
     */
    public static final Sessioninfos SESSIONINFOS = new Sessioninfos();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SessioninfosRecord> getRecordType() {
        return SessioninfosRecord.class;
    }

    /**
     * The column <code>F1GameDB.SessionInfos.sessionUID</code>.
     */
    public final TableField<SessioninfosRecord, Long> SESSIONUID = createField(DSL.name("sessionUID"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>F1GameDB.SessionInfos.startTime</code>.
     */
    public final TableField<SessioninfosRecord, LocalDateTime> STARTTIME = createField(DSL.name("startTime"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>F1GameDB.SessionInfos.endTime</code>.
     */
    public final TableField<SessioninfosRecord, LocalDateTime> ENDTIME = createField(DSL.name("endTime"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>F1GameDB.SessionInfos.trackId</code>.
     */
    public final TableField<SessioninfosRecord, Short> TRACKID = createField(DSL.name("trackId"), org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>F1GameDB.SessionInfos.pitSpeedLimit</code>.
     */
    public final TableField<SessioninfosRecord, Integer> PITSPEEDLIMIT = createField(DSL.name("pitSpeedLimit"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>F1GameDB.SessionInfos.duration</code>.
     */
    public final TableField<SessioninfosRecord, Integer> DURATION = createField(DSL.name("duration"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>F1GameDB.SessionInfos.totalLaps</code>.
     */
    public final TableField<SessioninfosRecord, Short> TOTALLAPS = createField(DSL.name("totalLaps"), org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>F1GameDB.SessionInfos.trackLength</code>.
     */
    public final TableField<SessioninfosRecord, Integer> TRACKLENGTH = createField(DSL.name("trackLength"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>F1GameDB.SessionInfos</code> table reference
     */
    public Sessioninfos() {
        this(DSL.name("SessionInfos"), null);
    }

    /**
     * Create an aliased <code>F1GameDB.SessionInfos</code> table reference
     */
    public Sessioninfos(String alias) {
        this(DSL.name(alias), SESSIONINFOS);
    }

    /**
     * Create an aliased <code>F1GameDB.SessionInfos</code> table reference
     */
    public Sessioninfos(Name alias) {
        this(alias, SESSIONINFOS);
    }

    private Sessioninfos(Name alias, Table<SessioninfosRecord> aliased) {
        this(alias, aliased, null);
    }

    private Sessioninfos(Name alias, Table<SessioninfosRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("General information for this session"), TableOptions.table());
    }

    public <O extends Record> Sessioninfos(Table<O> child, ForeignKey<O, SessioninfosRecord> key) {
        super(child, key, SESSIONINFOS);
    }

    @Override
    public Schema getSchema() {
        return F1gamedb.F1GAMEDB;
    }

    @Override
    public UniqueKey<SessioninfosRecord> getPrimaryKey() {
        return Keys.KEY_SESSIONINFOS_PRIMARY;
    }

    @Override
    public List<UniqueKey<SessioninfosRecord>> getKeys() {
        return Arrays.<UniqueKey<SessioninfosRecord>>asList(Keys.KEY_SESSIONINFOS_PRIMARY);
    }

    @Override
    public Sessioninfos as(String alias) {
        return new Sessioninfos(DSL.name(alias), this);
    }

    @Override
    public Sessioninfos as(Name alias) {
        return new Sessioninfos(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Sessioninfos rename(String name) {
        return new Sessioninfos(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Sessioninfos rename(Name name) {
        return new Sessioninfos(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, LocalDateTime, LocalDateTime, Short, Integer, Integer, Short, Integer> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
