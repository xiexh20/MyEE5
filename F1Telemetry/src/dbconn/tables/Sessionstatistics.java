/*
 * This file is generated by jOOQ.
 */
package dbconn.tables;


import dbconn.F1gamedb;
import dbconn.Keys;
import dbconn.tables.records.SessionstatisticsRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Statistic information about how the player controllers the game, such as 
 * what buttons are pressed, temperature, etc. 
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Sessionstatistics extends TableImpl<SessionstatisticsRecord> {

    private static final long serialVersionUID = 1403993916;

    /**
     * The reference instance of <code>F1GameDB.SessionStatistics</code>
     */
    public static final Sessionstatistics SESSIONSTATISTICS = new Sessionstatistics();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SessionstatisticsRecord> getRecordType() {
        return SessionstatisticsRecord.class;
    }

    /**
     * The column <code>F1GameDB.SessionStatistics.sessionId</code>.
     */
    public final TableField<SessionstatisticsRecord, Integer> SESSIONID = createField(DSL.name("sessionId"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>F1GameDB.SessionStatistics.speedUp</code>.
     */
    public final TableField<SessionstatisticsRecord, Integer> SPEEDUP = createField(DSL.name("speedUp"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>F1GameDB.SessionStatistics.packetFreq</code>.
     */
    public final TableField<SessionstatisticsRecord, Byte> PACKETFREQ = createField(DSL.name("packetFreq"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>F1GameDB.SessionStatistics.maxTemp</code>.
     */
    public final TableField<SessionstatisticsRecord, Short> MAXTEMP = createField(DSL.name("maxTemp"), org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>F1GameDB.SessionStatistics.hottestTime</code>.
     */
    public final TableField<SessionstatisticsRecord, LocalDateTime> HOTTESTTIME = createField(DSL.name("hottestTime"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>F1GameDB.SessionStatistics.brakingTime</code>.
     */
    public final TableField<SessionstatisticsRecord, Integer> BRAKINGTIME = createField(DSL.name("brakingTime"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>F1GameDB.SessionStatistics</code> table reference
     */
    public Sessionstatistics() {
        this(DSL.name("SessionStatistics"), null);
    }

    /**
     * Create an aliased <code>F1GameDB.SessionStatistics</code> table reference
     */
    public Sessionstatistics(String alias) {
        this(DSL.name(alias), SESSIONSTATISTICS);
    }

    /**
     * Create an aliased <code>F1GameDB.SessionStatistics</code> table reference
     */
    public Sessionstatistics(Name alias) {
        this(alias, SESSIONSTATISTICS);
    }

    private Sessionstatistics(Name alias, Table<SessionstatisticsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Sessionstatistics(Name alias, Table<SessionstatisticsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Statistic information about how the player controllers the game, such as what buttons are pressed, temperature, etc. "), TableOptions.table());
    }

    public <O extends Record> Sessionstatistics(Table<O> child, ForeignKey<O, SessionstatisticsRecord> key) {
        super(child, key, SESSIONSTATISTICS);
    }

    @Override
    public Schema getSchema() {
        return F1gamedb.F1GAMEDB;
    }

    @Override
    public UniqueKey<SessionstatisticsRecord> getPrimaryKey() {
        return Keys.KEY_SESSIONSTATISTICS_PRIMARY;
    }

    @Override
    public List<UniqueKey<SessionstatisticsRecord>> getKeys() {
        return Arrays.<UniqueKey<SessionstatisticsRecord>>asList(Keys.KEY_SESSIONSTATISTICS_PRIMARY);
    }

    @Override
    public List<ForeignKey<SessionstatisticsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SessionstatisticsRecord, ?>>asList(Keys.STATISTICS2SESSIONID);
    }

    public Sessionbasics sessionbasics() {
        return new Sessionbasics(this, Keys.STATISTICS2SESSIONID);
    }

    @Override
    public Sessionstatistics as(String alias) {
        return new Sessionstatistics(DSL.name(alias), this);
    }

    @Override
    public Sessionstatistics as(Name alias) {
        return new Sessionstatistics(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Sessionstatistics rename(String name) {
        return new Sessionstatistics(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Sessionstatistics rename(Name name) {
        return new Sessionstatistics(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Integer, Byte, Short, LocalDateTime, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
