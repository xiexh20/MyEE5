/*
 * This file is generated by jOOQ.
 */
package dbconn.tables;


import dbconn.F1gamedb;
import dbconn.Indexes;
import dbconn.Keys;
import dbconn.tables.records.SessiondetailsRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Detailed informations about the track settings. 
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Sessiondetails extends TableImpl<SessiondetailsRecord> {

    private static final long serialVersionUID = 1418559271;

    /**
     * The reference instance of <code>F1GameDB.SessionDetails</code>
     */
    public static final Sessiondetails SESSIONDETAILS = new Sessiondetails();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SessiondetailsRecord> getRecordType() {
        return SessiondetailsRecord.class;
    }

    /**
     * The column <code>F1GameDB.SessionDetails.sessionId</code>.
     */
    public final TableField<SessiondetailsRecord, Integer> SESSIONID = createField(DSL.name("sessionId"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>F1GameDB.SessionDetails.laps</code>.
     */
    public final TableField<SessiondetailsRecord, Byte> LAPS = createField(DSL.name("laps"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>F1GameDB.SessionDetails.trackId</code>.
     */
    public final TableField<SessiondetailsRecord, Short> TRACKID = createField(DSL.name("trackId"), org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>F1GameDB.SessionDetails.trackLength</code>.
     */
    public final TableField<SessiondetailsRecord, Integer> TRACKLENGTH = createField(DSL.name("trackLength"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>F1GameDB.SessionDetails.sessionDuration</code>.
     */
    public final TableField<SessiondetailsRecord, Integer> SESSIONDURATION = createField(DSL.name("sessionDuration"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>F1GameDB.SessionDetails.era</code>.
     */
    public final TableField<SessiondetailsRecord, Byte> ERA = createField(DSL.name("era"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * Create a <code>F1GameDB.SessionDetails</code> table reference
     */
    public Sessiondetails() {
        this(DSL.name("SessionDetails"), null);
    }

    /**
     * Create an aliased <code>F1GameDB.SessionDetails</code> table reference
     */
    public Sessiondetails(String alias) {
        this(DSL.name(alias), SESSIONDETAILS);
    }

    /**
     * Create an aliased <code>F1GameDB.SessionDetails</code> table reference
     */
    public Sessiondetails(Name alias) {
        this(alias, SESSIONDETAILS);
    }

    private Sessiondetails(Name alias, Table<SessiondetailsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Sessiondetails(Name alias, Table<SessiondetailsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Detailed informations about the track settings. "), TableOptions.table());
    }

    public <O extends Record> Sessiondetails(Table<O> child, ForeignKey<O, SessiondetailsRecord> key) {
        super(child, key, SESSIONDETAILS);
    }

    @Override
    public Schema getSchema() {
        return F1gamedb.F1GAMEDB;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SESSIONDETAILS_DETAIL2TRACK_IDX);
    }

    @Override
    public UniqueKey<SessiondetailsRecord> getPrimaryKey() {
        return Keys.KEY_SESSIONDETAILS_PRIMARY;
    }

    @Override
    public List<UniqueKey<SessiondetailsRecord>> getKeys() {
        return Arrays.<UniqueKey<SessiondetailsRecord>>asList(Keys.KEY_SESSIONDETAILS_PRIMARY);
    }

    @Override
    public List<ForeignKey<SessiondetailsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SessiondetailsRecord, ?>>asList(Keys.DETAIL2SESSIONID, Keys.DETAIL2TRACK);
    }

    public Sessionbasics sessionbasics() {
        return new Sessionbasics(this, Keys.DETAIL2SESSIONID);
    }

    public Tracks tracks() {
        return new Tracks(this, Keys.DETAIL2TRACK);
    }

    @Override
    public Sessiondetails as(String alias) {
        return new Sessiondetails(DSL.name(alias), this);
    }

    @Override
    public Sessiondetails as(Name alias) {
        return new Sessiondetails(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Sessiondetails rename(String name) {
        return new Sessiondetails(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Sessiondetails rename(Name name) {
        return new Sessiondetails(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Byte, Short, Integer, Integer, Byte> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
