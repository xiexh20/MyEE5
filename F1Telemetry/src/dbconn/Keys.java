/*
 * This file is generated by jOOQ.
 */
package dbconn;


import dbconn.tables.Drivers;
import dbconn.tables.Employees;
import dbconn.tables.Nationalities;
import dbconn.tables.Players;
import dbconn.tables.Sessionbasics;
import dbconn.tables.Sessiondetails;
import dbconn.tables.Sessionendstatus;
import dbconn.tables.Sessionperformance;
import dbconn.tables.Sessionstatistics;
import dbconn.tables.Teams;
import dbconn.tables.Tracks;
import dbconn.tables.records.DriversRecord;
import dbconn.tables.records.EmployeesRecord;
import dbconn.tables.records.NationalitiesRecord;
import dbconn.tables.records.PlayersRecord;
import dbconn.tables.records.SessionbasicsRecord;
import dbconn.tables.records.SessiondetailsRecord;
import dbconn.tables.records.SessionendstatusRecord;
import dbconn.tables.records.SessionperformanceRecord;
import dbconn.tables.records.SessionstatisticsRecord;
import dbconn.tables.records.TeamsRecord;
import dbconn.tables.records.TracksRecord;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>F1GameDB</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<DriversRecord, Short> IDENTITY_DRIVERS = Identities0.IDENTITY_DRIVERS;
    public static final Identity<EmployeesRecord, Integer> IDENTITY_EMPLOYEES = Identities0.IDENTITY_EMPLOYEES;
    public static final Identity<PlayersRecord, Integer> IDENTITY_PLAYERS = Identities0.IDENTITY_PLAYERS;
    public static final Identity<SessionbasicsRecord, Integer> IDENTITY_SESSIONBASICS = Identities0.IDENTITY_SESSIONBASICS;
    public static final Identity<TeamsRecord, Short> IDENTITY_TEAMS = Identities0.IDENTITY_TEAMS;
    public static final Identity<TracksRecord, Short> IDENTITY_TRACKS = Identities0.IDENTITY_TRACKS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DriversRecord> KEY_DRIVERS_PRIMARY = UniqueKeys0.KEY_DRIVERS_PRIMARY;
    public static final UniqueKey<EmployeesRecord> KEY_EMPLOYEES_PRIMARY = UniqueKeys0.KEY_EMPLOYEES_PRIMARY;
    public static final UniqueKey<NationalitiesRecord> KEY_NATIONALITIES_PRIMARY = UniqueKeys0.KEY_NATIONALITIES_PRIMARY;
    public static final UniqueKey<PlayersRecord> KEY_PLAYERS_PRIMARY = UniqueKeys0.KEY_PLAYERS_PRIMARY;
    public static final UniqueKey<SessionbasicsRecord> KEY_SESSIONBASICS_PRIMARY = UniqueKeys0.KEY_SESSIONBASICS_PRIMARY;
    public static final UniqueKey<SessiondetailsRecord> KEY_SESSIONDETAILS_PRIMARY = UniqueKeys0.KEY_SESSIONDETAILS_PRIMARY;
    public static final UniqueKey<SessionendstatusRecord> KEY_SESSIONENDSTATUS_PRIMARY = UniqueKeys0.KEY_SESSIONENDSTATUS_PRIMARY;
    public static final UniqueKey<SessionperformanceRecord> KEY_SESSIONPERFORMANCE_PRIMARY = UniqueKeys0.KEY_SESSIONPERFORMANCE_PRIMARY;
    public static final UniqueKey<SessionstatisticsRecord> KEY_SESSIONSTATISTICS_PRIMARY = UniqueKeys0.KEY_SESSIONSTATISTICS_PRIMARY;
    public static final UniqueKey<TeamsRecord> KEY_TEAMS_PRIMARY = UniqueKeys0.KEY_TEAMS_PRIMARY;
    public static final UniqueKey<TracksRecord> KEY_TRACKS_PRIMARY = UniqueKeys0.KEY_TRACKS_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<SessionbasicsRecord, PlayersRecord> BASIC2PLAYER = ForeignKeys0.BASIC2PLAYER;
    public static final ForeignKey<SessionbasicsRecord, DriversRecord> BASIC2DRIVER = ForeignKeys0.BASIC2DRIVER;
    public static final ForeignKey<SessionbasicsRecord, TeamsRecord> BASIC2TEAM = ForeignKeys0.BASIC2TEAM;
    public static final ForeignKey<SessionbasicsRecord, NationalitiesRecord> BASIC2NATIONALITY = ForeignKeys0.BASIC2NATIONALITY;
    public static final ForeignKey<SessiondetailsRecord, SessionbasicsRecord> DETAIL2SESSIONID = ForeignKeys0.DETAIL2SESSIONID;
    public static final ForeignKey<SessiondetailsRecord, TracksRecord> DETAIL2TRACK = ForeignKeys0.DETAIL2TRACK;
    public static final ForeignKey<SessionendstatusRecord, SessionbasicsRecord> ENDSTATUS2SESSIONID = ForeignKeys0.ENDSTATUS2SESSIONID;
    public static final ForeignKey<SessionperformanceRecord, SessionbasicsRecord> PERFORM2SESSIONID = ForeignKeys0.PERFORM2SESSIONID;
    public static final ForeignKey<SessionstatisticsRecord, SessionbasicsRecord> STATISTICS2SESSIONID = ForeignKeys0.STATISTICS2SESSIONID;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<DriversRecord, Short> IDENTITY_DRIVERS = Internal.createIdentity(Drivers.DRIVERS, Drivers.DRIVERS.IDDRIVER);
        public static Identity<EmployeesRecord, Integer> IDENTITY_EMPLOYEES = Internal.createIdentity(Employees.EMPLOYEES, Employees.EMPLOYEES.ID);
        public static Identity<PlayersRecord, Integer> IDENTITY_PLAYERS = Internal.createIdentity(Players.PLAYERS, Players.PLAYERS.IDPLAYER);
        public static Identity<SessionbasicsRecord, Integer> IDENTITY_SESSIONBASICS = Internal.createIdentity(Sessionbasics.SESSIONBASICS, Sessionbasics.SESSIONBASICS.IDSESSION);
        public static Identity<TeamsRecord, Short> IDENTITY_TEAMS = Internal.createIdentity(Teams.TEAMS, Teams.TEAMS.IDTEAM);
        public static Identity<TracksRecord, Short> IDENTITY_TRACKS = Internal.createIdentity(Tracks.TRACKS, Tracks.TRACKS.IDTRACK);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<DriversRecord> KEY_DRIVERS_PRIMARY = Internal.createUniqueKey(Drivers.DRIVERS, "KEY_Drivers_PRIMARY", new TableField[] { Drivers.DRIVERS.IDDRIVER }, true);
        public static final UniqueKey<EmployeesRecord> KEY_EMPLOYEES_PRIMARY = Internal.createUniqueKey(Employees.EMPLOYEES, "KEY_employees_PRIMARY", new TableField[] { Employees.EMPLOYEES.ID }, true);
        public static final UniqueKey<NationalitiesRecord> KEY_NATIONALITIES_PRIMARY = Internal.createUniqueKey(Nationalities.NATIONALITIES, "KEY_Nationalities_PRIMARY", new TableField[] { Nationalities.NATIONALITIES.IDNATIONALITY }, true);
        public static final UniqueKey<PlayersRecord> KEY_PLAYERS_PRIMARY = Internal.createUniqueKey(Players.PLAYERS, "KEY_Players_PRIMARY", new TableField[] { Players.PLAYERS.IDPLAYER }, true);
        public static final UniqueKey<SessionbasicsRecord> KEY_SESSIONBASICS_PRIMARY = Internal.createUniqueKey(Sessionbasics.SESSIONBASICS, "KEY_SessionBasics_PRIMARY", new TableField[] { Sessionbasics.SESSIONBASICS.IDSESSION }, true);
        public static final UniqueKey<SessiondetailsRecord> KEY_SESSIONDETAILS_PRIMARY = Internal.createUniqueKey(Sessiondetails.SESSIONDETAILS, "KEY_SessionDetails_PRIMARY", new TableField[] { Sessiondetails.SESSIONDETAILS.SESSIONID }, true);
        public static final UniqueKey<SessionendstatusRecord> KEY_SESSIONENDSTATUS_PRIMARY = Internal.createUniqueKey(Sessionendstatus.SESSIONENDSTATUS, "KEY_SessionEndStatus_PRIMARY", new TableField[] { Sessionendstatus.SESSIONENDSTATUS.SESSIONID }, true);
        public static final UniqueKey<SessionperformanceRecord> KEY_SESSIONPERFORMANCE_PRIMARY = Internal.createUniqueKey(Sessionperformance.SESSIONPERFORMANCE, "KEY_SessionPerformance_PRIMARY", new TableField[] { Sessionperformance.SESSIONPERFORMANCE.SENSSIONID }, true);
        public static final UniqueKey<SessionstatisticsRecord> KEY_SESSIONSTATISTICS_PRIMARY = Internal.createUniqueKey(Sessionstatistics.SESSIONSTATISTICS, "KEY_SessionStatistics_PRIMARY", new TableField[] { Sessionstatistics.SESSIONSTATISTICS.SESSIONID }, true);
        public static final UniqueKey<TeamsRecord> KEY_TEAMS_PRIMARY = Internal.createUniqueKey(Teams.TEAMS, "KEY_Teams_PRIMARY", new TableField[] { Teams.TEAMS.IDTEAM }, true);
        public static final UniqueKey<TracksRecord> KEY_TRACKS_PRIMARY = Internal.createUniqueKey(Tracks.TRACKS, "KEY_Tracks_PRIMARY", new TableField[] { Tracks.TRACKS.IDTRACK }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<SessionbasicsRecord, PlayersRecord> BASIC2PLAYER = Internal.createForeignKey(Keys.KEY_PLAYERS_PRIMARY, Sessionbasics.SESSIONBASICS, "basic2Player", new TableField[] { Sessionbasics.SESSIONBASICS.PLAYER }, true);
        public static final ForeignKey<SessionbasicsRecord, DriversRecord> BASIC2DRIVER = Internal.createForeignKey(Keys.KEY_DRIVERS_PRIMARY, Sessionbasics.SESSIONBASICS, "basic2Driver", new TableField[] { Sessionbasics.SESSIONBASICS.DRIVER }, true);
        public static final ForeignKey<SessionbasicsRecord, TeamsRecord> BASIC2TEAM = Internal.createForeignKey(Keys.KEY_TEAMS_PRIMARY, Sessionbasics.SESSIONBASICS, "basic2Team", new TableField[] { Sessionbasics.SESSIONBASICS.TEAM }, true);
        public static final ForeignKey<SessionbasicsRecord, NationalitiesRecord> BASIC2NATIONALITY = Internal.createForeignKey(Keys.KEY_NATIONALITIES_PRIMARY, Sessionbasics.SESSIONBASICS, "basic2Nationality", new TableField[] { Sessionbasics.SESSIONBASICS.NATIONALITY }, true);
        public static final ForeignKey<SessiondetailsRecord, SessionbasicsRecord> DETAIL2SESSIONID = Internal.createForeignKey(Keys.KEY_SESSIONBASICS_PRIMARY, Sessiondetails.SESSIONDETAILS, "detail2SessionId", new TableField[] { Sessiondetails.SESSIONDETAILS.SESSIONID }, true);
        public static final ForeignKey<SessiondetailsRecord, TracksRecord> DETAIL2TRACK = Internal.createForeignKey(Keys.KEY_TRACKS_PRIMARY, Sessiondetails.SESSIONDETAILS, "detail2Track", new TableField[] { Sessiondetails.SESSIONDETAILS.TRACKID }, true);
        public static final ForeignKey<SessionendstatusRecord, SessionbasicsRecord> ENDSTATUS2SESSIONID = Internal.createForeignKey(Keys.KEY_SESSIONBASICS_PRIMARY, Sessionendstatus.SESSIONENDSTATUS, "endStatus2sessionId", new TableField[] { Sessionendstatus.SESSIONENDSTATUS.SESSIONID }, true);
        public static final ForeignKey<SessionperformanceRecord, SessionbasicsRecord> PERFORM2SESSIONID = Internal.createForeignKey(Keys.KEY_SESSIONBASICS_PRIMARY, Sessionperformance.SESSIONPERFORMANCE, "perform2sessionId", new TableField[] { Sessionperformance.SESSIONPERFORMANCE.SENSSIONID }, true);
        public static final ForeignKey<SessionstatisticsRecord, SessionbasicsRecord> STATISTICS2SESSIONID = Internal.createForeignKey(Keys.KEY_SESSIONBASICS_PRIMARY, Sessionstatistics.SESSIONSTATISTICS, "statistics2sessionId", new TableField[] { Sessionstatistics.SESSIONSTATISTICS.SESSIONID }, true);
    }
}
