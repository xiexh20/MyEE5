/*
 * This file is generated by jOOQ.
 */
package ndbconn.tables.records;


import java.time.LocalDateTime;

import ndbconn.tables.Int8data;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Int8dataRecord extends UpdatableRecordImpl<Int8dataRecord> implements Record6<Integer, Byte, Long, Double, LocalDateTime, Short> {

    private static final long serialVersionUID = 511973069;

    /**
     * Setter for <code>NewF1DB.Int8Data.idData</code>.
     */
    public void setIddata(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>NewF1DB.Int8Data.idData</code>.
     */
    public Integer getIddata() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>NewF1DB.Int8Data.data</code>.
     */
    public void setData(Byte value) {
        set(1, value);
    }

    /**
     * Getter for <code>NewF1DB.Int8Data.data</code>.
     */
    public Byte getData() {
        return (Byte) get(1);
    }

    /**
     * Setter for <code>NewF1DB.Int8Data.sessionUID</code>.
     */
    public void setSessionuid(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>NewF1DB.Int8Data.sessionUID</code>.
     */
    public Long getSessionuid() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>NewF1DB.Int8Data.sessionTime</code>.
     */
    public void setSessiontime(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>NewF1DB.Int8Data.sessionTime</code>.
     */
    public Double getSessiontime() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>NewF1DB.Int8Data.arriveTime</code>.
     */
    public void setArrivetime(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>NewF1DB.Int8Data.arriveTime</code>.
     */
    public LocalDateTime getArrivetime() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>NewF1DB.Int8Data.dataName</code>.
     */
    public void setDataname(Short value) {
        set(5, value);
    }

    /**
     * Getter for <code>NewF1DB.Int8Data.dataName</code>.
     */
    public Short getDataname() {
        return (Short) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Byte, Long, Double, LocalDateTime, Short> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, Byte, Long, Double, LocalDateTime, Short> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Int8data.INT8DATA.IDDATA;
    }

    @Override
    public Field<Byte> field2() {
        return Int8data.INT8DATA.DATA;
    }

    @Override
    public Field<Long> field3() {
        return Int8data.INT8DATA.SESSIONUID;
    }

    @Override
    public Field<Double> field4() {
        return Int8data.INT8DATA.SESSIONTIME;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Int8data.INT8DATA.ARRIVETIME;
    }

    @Override
    public Field<Short> field6() {
        return Int8data.INT8DATA.DATANAME;
    }

    @Override
    public Integer component1() {
        return getIddata();
    }

    @Override
    public Byte component2() {
        return getData();
    }

    @Override
    public Long component3() {
        return getSessionuid();
    }

    @Override
    public Double component4() {
        return getSessiontime();
    }

    @Override
    public LocalDateTime component5() {
        return getArrivetime();
    }

    @Override
    public Short component6() {
        return getDataname();
    }

    @Override
    public Integer value1() {
        return getIddata();
    }

    @Override
    public Byte value2() {
        return getData();
    }

    @Override
    public Long value3() {
        return getSessionuid();
    }

    @Override
    public Double value4() {
        return getSessiontime();
    }

    @Override
    public LocalDateTime value5() {
        return getArrivetime();
    }

    @Override
    public Short value6() {
        return getDataname();
    }

    @Override
    public Int8dataRecord value1(Integer value) {
        setIddata(value);
        return this;
    }

    @Override
    public Int8dataRecord value2(Byte value) {
        setData(value);
        return this;
    }

    @Override
    public Int8dataRecord value3(Long value) {
        setSessionuid(value);
        return this;
    }

    @Override
    public Int8dataRecord value4(Double value) {
        setSessiontime(value);
        return this;
    }

    @Override
    public Int8dataRecord value5(LocalDateTime value) {
        setArrivetime(value);
        return this;
    }

    @Override
    public Int8dataRecord value6(Short value) {
        setDataname(value);
        return this;
    }

    @Override
    public Int8dataRecord values(Integer value1, Byte value2, Long value3, Double value4, LocalDateTime value5, Short value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached Int8dataRecord
     */
    public Int8dataRecord() {
        super(Int8data.INT8DATA);
    }

    /**
     * Create a detached, initialised Int8dataRecord
     */
    public Int8dataRecord(Integer iddata, Byte data, Long sessionuid, Double sessiontime, LocalDateTime arrivetime, Short dataname) {
        super(Int8data.INT8DATA);

        set(0, iddata);
        set(1, data);
        set(2, sessionuid);
        set(3, sessiontime);
        set(4, arrivetime);
        set(5, dataname);
    }
}
