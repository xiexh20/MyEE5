/*
 * This file is generated by jOOQ.
 */
package ndbconn.tables.records;


import ndbconn.tables.Uint8data;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Uint8dataRecord extends UpdatableRecordImpl<Uint8dataRecord> implements Record5<Integer, UByte, Short, Integer, Integer> {

    private static final long serialVersionUID = 56927466;

    /**
     * Setter for <code>NewF1DB.UInt8Data.idData</code>.
     */
    public void setIddata(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>NewF1DB.UInt8Data.idData</code>.
     */
    public Integer getIddata() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>NewF1DB.UInt8Data.data</code>.
     */
    public void setData(UByte value) {
        set(1, value);
    }

    /**
     * Getter for <code>NewF1DB.UInt8Data.data</code>.
     */
    public UByte getData() {
        return (UByte) get(1);
    }

    /**
     * Setter for <code>NewF1DB.UInt8Data.dataName</code>.
     */
    public void setDataname(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>NewF1DB.UInt8Data.dataName</code>.
     */
    public Short getDataname() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>NewF1DB.UInt8Data.packetId</code>.
     */
    public void setPacketid(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>NewF1DB.UInt8Data.packetId</code>.
     */
    public Integer getPacketid() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>NewF1DB.UInt8Data.sessionId</code>.
     */
    public void setSessionid(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>NewF1DB.UInt8Data.sessionId</code>.
     */
    public Integer getSessionid() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, UByte, Short, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, UByte, Short, Integer, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Uint8data.UINT8DATA.IDDATA;
    }

    @Override
    public Field<UByte> field2() {
        return Uint8data.UINT8DATA.DATA;
    }

    @Override
    public Field<Short> field3() {
        return Uint8data.UINT8DATA.DATANAME;
    }

    @Override
    public Field<Integer> field4() {
        return Uint8data.UINT8DATA.PACKETID;
    }

    @Override
    public Field<Integer> field5() {
        return Uint8data.UINT8DATA.SESSIONID;
    }

    @Override
    public Integer component1() {
        return getIddata();
    }

    @Override
    public UByte component2() {
        return getData();
    }

    @Override
    public Short component3() {
        return getDataname();
    }

    @Override
    public Integer component4() {
        return getPacketid();
    }

    @Override
    public Integer component5() {
        return getSessionid();
    }

    @Override
    public Integer value1() {
        return getIddata();
    }

    @Override
    public UByte value2() {
        return getData();
    }

    @Override
    public Short value3() {
        return getDataname();
    }

    @Override
    public Integer value4() {
        return getPacketid();
    }

    @Override
    public Integer value5() {
        return getSessionid();
    }

    @Override
    public Uint8dataRecord value1(Integer value) {
        setIddata(value);
        return this;
    }

    @Override
    public Uint8dataRecord value2(UByte value) {
        setData(value);
        return this;
    }

    @Override
    public Uint8dataRecord value3(Short value) {
        setDataname(value);
        return this;
    }

    @Override
    public Uint8dataRecord value4(Integer value) {
        setPacketid(value);
        return this;
    }

    @Override
    public Uint8dataRecord value5(Integer value) {
        setSessionid(value);
        return this;
    }

    @Override
    public Uint8dataRecord values(Integer value1, UByte value2, Short value3, Integer value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached Uint8dataRecord
     */
    public Uint8dataRecord() {
        super(Uint8data.UINT8DATA);
    }

    /**
     * Create a detached, initialised Uint8dataRecord
     */
    public Uint8dataRecord(Integer iddata, UByte data, Short dataname, Integer packetid, Integer sessionid) {
        super(Uint8data.UINT8DATA);

        set(0, iddata);
        set(1, data);
        set(2, dataname);
        set(3, packetid);
        set(4, sessionid);
    }
}
